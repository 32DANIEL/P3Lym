ROBOT_R
VARS a,b,c,d,e;
PROCS
hola [|a| move:1]
[
hola:1;
hola:2,1;
hola:1,2,3;
assignTo:1,a;
goto:1,1;
goto:x,1;
goto:1,x;
goto:x,x;
move:n;
move:1;
turn:left;
turn:right;
turn:around;
face:north;
face:south;
face:east;
face:west;
put:1,balloons;
put:x,balloons;
put:1,chips;
put:x,chips;
pick:1,balloons;
pick:x,balloons;
pick:1,chips;
pick:x,chips;
moveToThe:1,front;
moveToThe:1,right;
moveToThe:1,left;
moveToThe:1,back;
moveToThe:x,front;
moveToThe:x,right;
moveToThe:x,left;
moveToThe:x,back;
moveInDir:1,north;
moveInDir:1,south;
moveInDir:1,west;
moveInDir:1,east;
moveInDir:x,north;
moveInDir:x,south;
moveInDir:x,west;
moveInDir:x,east;
jumpToThe:1,front;
jumpToThe:1,right;
jumpToThe:1,left;
jumpToThe:1,back;
jumpToThe:x,front;
jumpToThe:x,right;
jumpToThe:x,left;
jumpToThe:x,back;
jumpInDir:1,north;
jumpInDir:1,south;
jumpInDir:1,west;
jumpInDir:1,east;
jumpInDir:x,north;
jumpInDir:x,south;
jumpInDir:x,west;
jumpInDir:x,east;
if: facing: north then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: facing: south then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: facing: west then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: facing: east then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPut: 1, chips then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPut: x, chips then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPut: 1, balloons then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPut: x, balloons then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPick: 1, chips then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPick: x, chips then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPick: 1, balloons then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canPick: x, balloons then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: x, north then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: x, south then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: x, east then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: x, west then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: 1, north then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: 1, south then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: 1, east then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveInDir: 1, west then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: x, north then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: x, south then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: x, east then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: x, west then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: 1, north then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: 1, south then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: 1, east then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canJumpInDir: 1, west then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, front then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, right then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, left then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, back then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: x, front then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: x, right then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: x, left then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: x, back then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, front then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, right then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: canMoveToThe: 1, left then: [if: facing: north then: [move:1] else: [move:1];move:1] else: [move:1];
if: not:canMoveToThe: 1, back then: [if: facing: north then: [move:1] else: [move:1;while: facing:north do: [hola:]];move:1] else: [move:1];
while: facing: north do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: facing: south do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: facing: west do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: facing: east do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPut: 1, chips do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPut: x, chips do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPut: 1, balloons do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPut: x, balloons do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPick: 1, chips do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPick: x, chips do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPick: 1, balloons do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canPick: x, balloons do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: x, north do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: x, south do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: x, east do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: x, west do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: 1, north do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: 1, south do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: 1, east do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveInDir: 1, west do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: x, north do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: x, south do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: x, east do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: x, west do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: 1, north do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: 1, south do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: 1, east do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canJumpInDir: 1, west do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, front do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, right do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, left do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, back do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: x, front do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: x, right do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: x, left do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: x, back do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, front do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, right do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: canMoveToThe: 1, left do: [if: facing: north then: [move:1] else: [move:1];move:1];
while: not:canMoveToThe: 1, back do: [if: facing: north then: [move:1] else: [move:1];move:1];
repeat: 5 [move: 1];
repeat: x [move: x];
nop:
]
[
nop:
]